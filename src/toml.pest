WHITESPACE = _{ " " }

char = { ASCII_ALPHANUMERIC | "_" | "-" }
dot = { "." }
comma = { "," }

quote = { "\"" }

bare_key = @{ char* }
quoted_key = @{ quote ~ ( char | dot )+ ~ quote }
simple_key = { quoted_key | bare_key }
dotted_key = ${ simple_key ~ (dot ~ simple_key)+ }
any_key = { dotted_key | simple_key }

u = { ASCII_HEX_DIGIT }
lc_u = _{ "\\u" }
uni_4 = { u{4} }
uni_escape_4 = @{ lc_u ~ uni_4 }

uc_u = { "\\U" }
uni_8 = { u{8} }
uni_escape_8 = @{ uc_u ~ uni_8 }
escape_backspace = { "\\b" }
escape_tab = { "\\t" }
escape_linefeed = { "\\n" }
escape_formfeed = { "\\f" }
escape_cr = { "\\r" }
escape_quote = { "\\\"" }
escape_backslash = { "\\\\" }

escape = { escape_backspace
         | escape_tab
         | escape_linefeed
         | escape_formfeed
         | escape_cr
         | escape_quote
         | escape_backslash
         }

str_val_chr = { char | uni_escape_4 | uni_escape_8 | escape }
simple_string_val = { quote ~ str_val_chr+ ~ quote }

triple_quote = @{ quote{3} }
backslash = { "\\" }
newline = { "\n" | "\r\n" }
escaped_whitespace = @{ backslash ~ ( newline | WHITESPACE )+ }
triple_quote_val = { triple_quote ~
                       ( str_val_chr
                       | escaped_whitespace
                       | newline
                       | WHITESPACE )+
                     ~ triple_quote }

int = @{ ASCII_DIGIT+ }
float = @{ ASCII_DIGIT+ ~ dot ~ ASCII_DIGIT+ }

datetime = @{ datetime_tz | dt | date | time }
datetime_tz = @{ dt ~ offset }
dt = @{ date ~ ( "T" | WHITESPACE ) ~ ( time_moment | time ) }
colon = _{ ":" }
hyphen = _{ "-" }
date = @{ ASCII_DIGIT{4} ~ hyphen ~ ASCII_DIGIT{2} ~ hyphen ~ ASCII_DIGIT{2} }
time = @{ ASCII_DIGIT{2} ~ colon ~ ASCII_DIGIT{2} ~ colon ~ ASCII_DIGIT{2} }
time_moment = @{ time ~ moment }
moment = @{ dot ~ ASCII_DIGIT+ }
offset = @{ ( ( "+" | "-" ) ~ ( ASCII_DIGIT{2} ~ colon ~ ASCII_DIGIT{2} ) | "Z" ) }

COMMENT = _{ "#" ~ (!( "#" | newline) ~ ANY)* ~ newline }

any_simple_val = { datetime | triple_quote_val | simple_string_val | int | float }

open_bracket = _{ "[" }
close_bracket = _{ "]" }

array = {
  open_bracket ~
    newline* ~
    ( any_simple_val ~ comma ) ~ newline* ~
    ( ( any_simple_val ~ comma? ) ~ newline* )* ~
  close_bracket
}

any_val = { any_simple_val | array }

kv = { any_key ~ "=" ~ any_val ~ (WHITESPACE+ ~ COMMENT)? }

file = { SOI ~ (( kv | COMMENT ) ~ "\n"*)+ ~ EOI }
